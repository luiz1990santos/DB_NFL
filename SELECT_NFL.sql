

/* PROJEÇÃO DOS JOGOS DO SUPERBOWL COM NOME DOS TIMES */
CREATE VIEW VIEW_JOGOS_SUPERBOWL AS
 SELECT 
    CONCAT('Superbowl ',S.IDSUPERBOWL) AS 'EDICAO DO SUPERBOWL', 
    T1.TIME AS 'VENCEDOR', 
    T2.TIME AS 'PERDEDOR', 
    S.DATA 
 FROM SUPERBOWL S
 INNER JOIN TIMES T1
 ON T1.IDTIME = S.IDVENCEDOR
 INNER JOIN TIMES T2
 ON T2.IDTIME = S.IDPERDEDOR
 ORDER BY IDSUPERBOWL;



/* TOTAL DE VITORIAS NO SUPERBOWL AGRUPADO POR VENCEDOR */
CREATE VIEW VIEW_VENCEDORES_SUPERBOWL AS  
 SELECT 
    CONCAT(COUNT(S.IDVENCEDOR),' título(s)') AS 'SUPERBOWL', 
    T1.TIME AS 'TIMES' 
 FROM SUPERBOWL S
 INNER JOIN TIMES T1
 ON T1.IDTIME = S.IDVENCEDOR
 GROUP BY IDVENCEDOR
 ORDER BY COUNT(IDVENCEDOR) DESC;



/* TOTAL DE DERROTAS NO SUPERBOWL AGRUPADO POR PERDEDOR */
CREATE VIEW VIEW_DERROTADOS_SUPERBOWL AS
 SELECT 
    CONCAT(COUNT(S.IDPERDEDOR),' derrota(s)')AS 'SUPERBOWL', 
    T1.TIME AS 'TIMES' 
 FROM SUPERBOWL S
 INNER JOIN TIMES T1
 ON T1.IDTIME = S.IDPERDEDOR
 GROUP BY IDPERDEDOR
 ORDER BY COUNT(IDPERDEDOR) DESC;


/* QUANTIDADE DE JOGADORES CONTRATADOS POR TIME */
CREATE VIEW VIEW_QUANTIDADE_JOGADORES_TIME AS
 SELECT 
    CONCAT(COUNT(ID_TIME_JOGADOR),' jogadores')AS 'TOTAL', 
    T.TIME AS 'NOME DO TIME' 
 FROM JOGADORES 
 INNER JOIN TIMES T
 ON ID_TIME_JOGADOR = T.IDTIME
 GROUP BY IDTIME;



/* QUANTIDADE DE JOGADORES POR POSICAO */
CREATE VIEW VIEW_QUANTIDADE_JOGADORES_POSICAO AS 
 SELECT 
    CONCAT(COUNT(IDJOGADOR),' jogadores') AS 'QUANTIDADE', 
    POSICAO 
 FROM JOGADORES
 GROUP BY POSICAO
 ORDER BY COUNT(IDJOGADOR) DESC;



/* PROJEÇÃO DOS TIMES DA CONFERENCIA AMERICANA */
CREATE VIEW VIEW_CONFERENCIA_AMERICANA AS
 SELECT 
    T.TIME, 
    CONFERENCIA, 
    DIVISAO, 
    T.ESTADIO 
 FROM DIVISOES
 INNER JOIN TIMES T 
 ON ID_DIV_TIME = IDTIME
 WHERE CONFERENCIA = 'AFC';



/* PROJEÇÃO DOS TIMES DA CONFERENCIA NACIONAL */
CREATE VIEW VIEW_CONFERENCIA_NACIONAL AS 
 SELECT 
    T.TIME, 
    CONFERENCIA, 
    DIVISAO, 
    T.ESTADIO 
 FROM DIVISOES
 INNER JOIN TIMES T 
 ON ID_DIV_TIME = IDTIME
 WHERE CONFERENCIA = 'NFC';



/* PROJEÇÃO DAS FINAIS DA AFC COM OS NOMES DOS TIMES */
CREATE VIEW VIEW_FINAIS_AFC AS
 SELECT 
    CONCAT('AFC Championship ',A.ID_AFC) AS 'EDICAO DO CAMPEONATO', 
    T1.TIME AS 'VENCEDOR', 
    T2.TIME AS 'PERDEDOR', 
    A.DATA 
 FROM AFC A
 INNER JOIN TIMES T1
 ON T1.IDTIME = A.IDVENCEDOR
 INNER JOIN TIMES T2
 ON T2.IDTIME = A.IDPERDEDOR
 ORDER BY ID_AFC;



/* TOTAL DE TITULOS DA AFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_TITULOS_AFC AS
 SELECT 
   CONCAT(COUNT(A.IDVENCEDOR), ' título(s)') AS 'AFC Championship', 
   T.TIME AS 'TIMES' 
 FROM AFC A
 INNER JOIN TIMES T 
 ON A.IDVENCEDOR =  T.IDTIME
 GROUP BY A.IDVENCEDOR
 ORDER BY COUNT(IDVENCEDOR) DESC;



/* TOTAL DE DERROTADOS DA AFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_DERROTAS_AFC AS
 SELECT 
   CONCAT(COUNT(A.IDPERDEDOR), ' derrota(s)') AS 'AFC Championship', 
   T.TIME AS 'TIMES' 
 FROM AFC A
 INNER JOIN TIMES T 
 ON A.IDPERDEDOR =  T.IDTIME
 GROUP BY A.IDPERDEDOR
 ORDER BY COUNT(IDPERDEDOR) DESC;



/* PROJEÇÃO DAS FINAIS DA NFC COM OS NOMES DOS TIMES */
CREATE VIEW VIEW_FINAIS_NFC AS
 SELECT 
    CONCAT('NFC Championship ',N.ID_NFC) AS 'EDICAO DO CAMPEONATO',
    T1.TIME AS 'VENCEDOR', 
    T2.TIME AS 'PERDEDOR', 
    N.DATA 
 FROM NFC N
 INNER JOIN TIMES T1
 ON T1.IDTIME = N.IDVENCEDOR
 INNER JOIN TIMES T2
 ON T2.IDTIME = N.IDPERDEDOR
 ORDER BY ID_NFC;



/* TOTAL DE TITULOS DA NFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_TITULOS_NFC AS
 SELECT 
   CONCAT(COUNT(N.IDVENCEDOR), ' título(s)') AS 'NFC Championship', 
   T.TIME AS 'TIMES' 
 FROM NFC N
 INNER JOIN TIMES T 
 ON N.IDVENCEDOR =  T.IDTIME
 GROUP BY N.IDVENCEDOR
 ORDER BY COUNT(N.IDVENCEDOR) DESC;



/* TOTAL DE DERROTADOS DA NFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_DERROTAS_NFC AS
 SELECT 
   CONCAT(COUNT(N.IDPERDEDOR), ' derrota(s)') AS 'NFC Championship', 
   T.TIME AS 'TIMES' 
 FROM NFC N
 INNER JOIN TIMES T 
 ON N.IDPERDEDOR =  T.IDTIME
 GROUP BY N.IDPERDEDOR
 ORDER BY COUNT(N.IDPERDEDOR) DESC;



 /* TIME COM A MELHOR PERFORMANCE EM UMA TEMPORADA */
CREATE VIEW VIEW_TIME_MELHOR_PERFORMANCE AS 
 SELECT 
   T.TIME, 
   CONCAT(J.VITORIAS,' vitória(s)') AS 'VITORIA', 
   CONCAT(J.DERROTAS,' derrota(s)') AS 'DERROTA', 
   TE.IDTEMPORADA AS 'TEMPORADA'
 FROM JOGOS J
 INNER JOIN TIMES T
 ON J.ID_TIME = T.IDTIME
 RIGHT JOIN TEMPORADAS TE
 ON J.ID_TEMPORADA = TE.IDTEMPORADA 
 WHERE VITORIAS = (SELECT MAX(VITORIAS) FROM JOGOS);



/* TIME COM A PIOR PERFORMANCE EM UMA TEMPORADA */
CREATE VIEW VIEW_TIME_PIOR_PERFORMANCE AS 
 SELECT 
   T.TIME, 
   CONCAT(J.VITORIAS,' vitória(s)') AS 'VITORIA', 
   CONCAT(J.DERROTAS,' derrota(s)') AS 'DERROTA', 
   TE.IDTEMPORADA AS 'TEMPORADA'
 FROM JOGOS J
 INNER JOIN TIMES T
 ON J.ID_TIME = T.IDTIME
 RIGHT JOIN TEMPORADAS TE
 ON J.ID_TEMPORADA = TE.IDTEMPORADA
 WHERE DERROTAS = (SELECT MAX(DERROTAS) FROM JOGOS);



/* PROJEÇAO DO TOTAL DE VITORIAS, DERROTAS, EMPATES E JOGOS POR TEMPORADA
AGRUPADO POR TIMES */
CREATE VIEW VIEW_DADOS_JOGOS_TIMES AS
 SELECT 
   CONCAT(COUNT(IDJOGOS),' temporadas') AS 'ANOS JOGADOS', 
   TIME, 
   CONCAT(SUM(VITORIAS),' vitórias') AS 'VITORIA', 
   CONCAT(SUM(DERROTAS),' derrotas') AS 'DERROTA',
   CONCAT(SUM(EMPATES),' empates') AS 'EMPATE',
   CONCAT(SUM(VITORIAS + DERROTAS + EMPATES),' jogos') AS 'TOTAL'
 FROM JOGOS
 INNER JOIN TIMES
 ON ID_TIME = IDTIME
 GROUP BY ID_TIME
 ORDER BY SUM(EMPATES) DESC;



/* QUANTIDADE DE TEMPORADAS JOGADAS POR CADA TIME */
CREATE VIEW VIEW_TEMPORADAS_JOGADAS AS 
 SELECT 
   ID_TIME AS 'ID',
   TIME,
   CONCAT(COUNT(IDJOGOS),' temporadas') AS 'ANOS JOGADOS'
 FROM JOGOS
 INNER JOIN TIMES
 ON ID_TIME = IDTIME
 GROUP BY ID_TIME
 ORDER BY IDTIME;



/* CADA TIME, SUAS TEMPORADAS E RESULTADOS */
CREATE VIEW VIEW_TIMES_JOGOS_TEMPORADAS AS
 SELECT
   IDTIME AS 'ID',
   TIME,
   CONCAT((VITORIAS),' vitórias') AS 'VITORIA', 
   CONCAT((DERROTAS),' derrotas') AS 'DERROTA',
   CONCAT((EMPATES),' empates') AS 'EMPATE',
   IDTEMPORADA AS 'TEMPORADA'
 FROM JOGOS 
 INNER JOIN TIMES
 ON IDTIME = ID_TIME
 INNER JOIN TEMPORADAS
 ON ID_TEMPORADA = IDTEMPORADA
 ORDER BY IDTIME, IDTEMPORADA ASC;



/* QUARTERBACKS TITULARES E SEUS TIMES */
CREATE VIEW VIEW_QUARTERBACKS_TIMES AS
 SELECT 
   CAMISA,
   NOME AS 'NOME DO JOGADOR', 
   POSICAO, 
   IDADE, 
   UNIVERSIDADE,
   TIME  
 FROM JOGADORES
 INNER JOIN TIMES
 ON ID_TIME_JOGADOR = IDTIME
 WHERE POSICAO = 'QUARTERBACK' AND IDJOGADOR 
 IN 
 (2,128,171,240,319,377,490,574,676,748,795,
 917,933,1041,1077,1176,1272,1325,1394,1462,
 1538,1625,1733,1773,1882,1952,1985,2055,2169,
 2265,2289,2420);



/* TODOS OS WIDE RECEICERS, RUNNING BACKS, TIGHT ENDS E SEUS TIMES */
CREATE VIEW VIEW_TODOS_WR_TE_RB AS
 SELECT 
   CAMISA,
   NOME AS 'NOME DO JOGADOR', 
   POSICAO, 
   IDADE, 
   UNIVERSIDADE,
   TIME 
 FROM JOGADORES
 INNER JOIN TIMES
 ON ID_TIME_JOGADOR = IDTIME
 WHERE (POSICAO = 'WIDE RECEIVER') 
 OR (POSICAO = 'RUNNING BACK') 
 OR (POSICAO = 'TIGHT END') 
 ORDER BY POSICAO, TIME;



/* UNIVERSIDADES COM MAIOR NÚMERO DE JOGADORES CONTRATADOS */ 
CREATE VIEW VIEW_JOGADORES_UNIVERSIDADE AS
 SELECT  
   CONCAT(COUNT(IDJOGADOR),' jogadores draftados da') AS 'JOGADORES',
   CONCAT('Faculdade ',UNIVERSIDADE) as 'UNIVERSIDADES'
 FROM JOGADORES
 GROUP BY UNIVERSIDADE
 ORDER BY COUNT(IDJOGADOR) DESC
 LIMIT 37;
 
 
 
 /* SELECTS */
SELECT * FROM view_conferencia_americana;
SELECT * FROM view_conferencia_nacional;
SELECT * FROM view_dados_jogos_times;
SELECT * FROM view_derrotados_superbowl;
SELECT * FROM view_derrotas_afc;
SELECT * FROM view_derrotas_nfc;
SELECT * FROM view_finais_afc;
SELECT * FROM view_finais_nfc;
SELECT * FROM view_jogadores_universidade;
SELECT * FROM view_jogos_superbowl;
SELECT * FROM view_quantidade_jogadores_posicao;
SELECT * FROM view_quantidade_jogadores_time;
SELECT * FROM view_temporadas_jogadas;
SELECT * FROM view_time_melhor_performance;
SELECT * FROM view_time_pior_performance;
SELECT * FROM view_times_jogos_temporadas;
SELECT * FROM view_titulos_afc;
SELECT * FROM view_titulos_nfc;
SELECT * FROM view_vencedores_superbowl;
SELECT * FROM view_todos_wr_te_rb;
SELECT * FROM view_quarterbacks_times;

 
 
