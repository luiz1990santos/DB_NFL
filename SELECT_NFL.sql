                    
                    
                    /* PROJEÇÕES DOS RELACIONAMENTOS ENTRES TABELAS */


/* PROJEÇÃO DOS JOGOS DO SUPERBOWL COM NOME DOS TIMES */
CREATE VIEW VIEW_JOGOS_SUPERBOWL AS
 SELECT 
    S.IDSUPERBOWL AS 'Nº DO SUPERBOWL', 
    T1.TIME AS 'VENCEDOR', 
    T2.TIME AS 'PERDEDOR', 
    S.DATA 
 FROM SUPERBOWL S
 INNER JOIN TIMES T1
 ON T1.IDTIME = S.IDVENCEDOR
 INNER JOIN TIMES T2
 ON T2.IDTIME = S.IDPERDEDOR
 ORDER BY IDSUPERBOWL;



/* TOTAL DE VITORIAS NO SUPERBOWL AGRUPADO POR VENCEDOR */
CREATE VIEW VIEW_VENCEDORES_SUPERBOWL AS  
 SELECT 
    COUNT(S.IDVENCEDOR) AS 'TOTAL DE TITULOS', 
    T1.TIME AS 'TIMES' 
 FROM SUPERBOWL S
 INNER JOIN TIMES T1
 ON T1.IDTIME = S.IDVENCEDOR
 GROUP BY IDVENCEDOR;



/* TOTAL DE DERROTAS NO SUPERBOWL AGRUPADO POR PERDEDOR */
CREATE VIEW VIEW_DERROTADOS_SUPERBOWL AS
 SELECT 
    COUNT(S.IDPERDEDOR) AS 'DERROTAS NO SUPERBOWL', 
    T1.TIME AS 'TIMES' 
 FROM SUPERBOWL S
 INNER JOIN TIMES T1
 ON T1.IDTIME = S.IDPERDEDOR
 GROUP BY IDPERDEDOR;



/* QUANTIDADE DE JOGADORES CONTRATADOS POR TIME */
CREATE VIEW VIEW_QUANTIDADE_JOGADORES_TIME AS
 SELECT 
    COUNT(ID_TIME_JOGADOR)AS 'TOTAL DE JOGADORES', 
    T.TIME AS 'NOME DO TIME' 
 FROM JOGADORES 
 INNER JOIN TIMES T
 ON ID_TIME_JOGADOR = T.IDTIME
 GROUP BY IDTIME;



/* QUANTIDADE DE JOGADORES POR POSICAO */
CREATE VIEW VIEW_QUANTIDADE_JOGADORES_POSICAO AS 
 SELECT 
    COUNT(IDJOGADOR) AS 'QUANTIDADE DE JOGADORES', 
    POSICAO 
 FROM JOGADORES
 GROUP BY POSICAO;



/* PROJEÇÃO DOS TIMES DA CONFERENCIA AMERICANA */
CREATE VIEW VIEW_CONFERENCIA_AMERICANA AS
 SELECT 
    T.TIME, 
    CONFERENCIA, 
    DIVISAO, 
    T.ESTADIO 
 FROM DIVISOES
 INNER JOIN TIMES T 
 ON ID_DIV_TIME = IDTIME
 WHERE CONFERENCIA = 'AFC';



/* PROJEÇÃO DOS TIMES DA CONFERENCIA NACIONAL */
CREATE VIEW VIEW_CONFERENCIA_NACIONAL AS 
 SELECT 
    T.TIME, 
    CONFERENCIA, 
    DIVISAO, 
    T.ESTADIO 
 FROM DIVISOES
 INNER JOIN TIMES T 
 ON ID_DIV_TIME = IDTIME
 WHERE CONFERENCIA = 'NFC';



/* PROJEÇÃO DAS FINAIS DA AFC COM OS NOMES DOS TIMES */
CREATE VIEW VIEW_FINAIS_AFC AS
 SELECT 
    A.ID_AFC AS 'EDICAO DO CAMPEONATO', 
    T1.TIME AS 'VENCEDOR', 
    T2.TIME AS 'PERDEDOR', 
    A.DATA 
 FROM AFC A
 INNER JOIN TIMES T1
 ON T1.IDTIME = A.IDVENCEDOR
 INNER JOIN TIMES T2
 ON T2.IDTIME = A.IDPERDEDOR
 ORDER BY ID_AFC;



/* TOTAL DE TITULOS DA AFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_TITULOS_AFC AS
 SELECT 
   COUNT(A.IDVENCEDOR) AS 'TITULOS NA AFC', 
   T.TIME AS 'TIMES' 
 FROM AFC A
 INNER JOIN TIMES T 
 ON A.IDVENCEDOR =  T.IDTIME
 GROUP BY A.IDVENCEDOR;



/* TOTAL DE DERROTADOS DA AFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_DERROTAS_AFC AS
 SELECT 
   COUNT(A.IDPERDEDOR) AS 'DERROTAS NA AFC', 
   T.TIME AS 'TIMES' 
 FROM AFC A
 INNER JOIN TIMES T 
 ON A.IDPERDEDOR =  T.IDTIME
 GROUP BY A.IDPERDEDOR;



/* PROJEÇÃO DAS FINAIS DA NFC COM OS NOMES DOS TIMES */
CREATE VIEW VIEW_FINAIS_NFC AS
 SELECT 
    N.ID_NFC AS 'EDICAO DO CAMPEONATO', 
    T1.TIME AS 'VENCEDOR', 
    T2.TIME AS 'PERDEDOR', 
    N.DATA 
 FROM NFC N
 INNER JOIN TIMES T1
 ON T1.IDTIME = N.IDVENCEDOR
 INNER JOIN TIMES T2
 ON T2.IDTIME = N.IDPERDEDOR
 ORDER BY ID_NFC;



/* TOTAL DE TITULOS DA NFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_TITULOS_NFC AS
 SELECT 
   COUNT(N.IDVENCEDOR) AS 'TITULOS NA NFC', 
   T.TIME AS 'TIMES' 
 FROM NFC N
 INNER JOIN TIMES T 
 ON N.IDVENCEDOR =  T.IDTIME
 GROUP BY N.IDVENCEDOR;



/* TOTAL DE DERROTADOS DA NFC, AGRUPADOS POR TIMES */
CREATE VIEW VIEW_DERROTAS_NFC AS
 SELECT 
   COUNT(A.IDPERDEDOR) AS 'DERROTAS NA NFC', 
   T.TIME AS 'TIMES' 
 FROM NFC A
 INNER JOIN TIMES T 
 ON A.IDPERDEDOR =  T.IDTIME
 GROUP BY A.IDPERDEDOR;



 /* TIME COM A PIOR PERFORMANCE EM UMA TEMPORADA */
CREATE VIEW VIEW_TIME_MELHOR_PERFORMANCE AS 
 SELECT 
   T.TIME, 
   J.VITORIAS, 
   J.DERROTAS, 
   TE.IDTEMPORADA 
 FROM JOGOS J
 INNER JOIN TIMES T
 ON J.ID_TIME = T.IDTIME
 RIGHT JOIN TEMPORADAS TE
 ON J.ID_TEMPORADA = TE.IDTEMPORADA
 WHERE VITORIAS = (SELECT MAX(VITORIAS) FROM JOGOS);



/* TIME COM A PIOR PERFORMANCE EM UMA TEMPORADA */
CREATE VIEW VIEW_TIME_PIOR_PERFORMANCE AS 
 SELECT T.TIME, J.VITORIAS, J.DERROTAS, TE.IDTEMPORADA FROM JOGOS J
 INNER JOIN TIMES T
 ON J.ID_TIME = T.IDTIME
 RIGHT JOIN TEMPORADAS TE
 ON J.ID_TEMPORADA = TE.IDTEMPORADA
 WHERE DERROTAS = (SELECT MAX(DERROTAS) FROM JOGOS);



/* PROJEÇAO DO TOTAL DE VITORIAS, DERROTAS, EMPATES E JOGOS POR TEMPORADA
AGRUPADO POR TIMES */
CREATE VIEW VIEW_DADOS_JOGOS_TIMES AS
 SELECT 
   COUNT(IDJOGOS)AS 'TEMPORADAS JOGADAS', 
   TIME, 
   SUM(VITORIAS) AS 'VITORIAS', 
   SUM(DERROTAS) AS 'DERROTAS',
   SUM(EMPATES) AS 'EMPATES',
   SUM(VITORIAS + DERROTAS + EMPATES) AS 'TOTAL DE JOGOS'
 FROM JOGOS
 INNER JOIN TIMES
 ON ID_TIME = IDTIME
 GROUP BY ID_TIME;



/* QUANTIDADE DE TEMPORADAS JOGADAS POR CADA TIME */
CREATE VIEW VIEW_TEMPORADAS_JOGADAS AS 
 SELECT 
   ID_TIME,
   TIME,
   COUNT(IDJOGOS)AS 'TEMPORADAS JOGADAS'
 FROM JOGOS
 INNER JOIN TIMES
 ON ID_TIME = IDTIME
 GROUP BY ID_TIME
 ORDER BY ID_TIME;


/* PROJEÇÃO DE CADA TIME, SUAS TEMPORADAS E RESULTADOS */
CREATE VIEW VIEW_TIMES_JOGOS_TEMPORADAS AS
 SELECT
   IDTIME AS 'Nº',
   TIME,
   VITORIAS,
   DERROTAS,
   EMPATES,
   IDTEMPORADA
 FROM JOGOS 
 INNER JOIN TIMES
 ON IDTIME = ID_TIME
 CROSS JOIN TEMPORADAS
 ON ID_TEMPORADA = IDTEMPORADA
 ORDER BY IDTIME;
